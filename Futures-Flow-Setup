//@version=6
indicator("ENA Futures All-in-One (Overlay + Dashboard + Warnings, lane fix) — v6", overlay=true)

// ========= Inputs =========
lenCMF  = input.int(20, "CMF length")
lenMFI  = input.int(14, "MFI length")
lenEMA  = input.int(50, "Trend EMA")
tfFast  = input.timeframe("240", "MTF CMF (Fast) – 4H")
tfSlow  = input.timeframe("D",   "MTF CMF (Slow) – 1D")
zLenOBV = input.int(100, "OBV z-score length", minval=10)

// OI & Funding (nhập symbol nếu có nguồn dữ liệu)
oiSymbol      = input.symbol("", "Open Interest symbol (optional)")    // ví dụ ENA là: BINANCE:ENAUSDT.P
fundingSymbol = input.symbol("", "Funding Rate symbol (optional)")     // ví dụ ENA là: BINANCE:ENAUSDT.P
oiTf          = input.timeframe("60", "OI/Funding timeframe (e.g. 60, 240, D)")
fundPosAlert  = input.float(0.02, "Funding +threshold (+2% = 0.02)", step=0.0001)
fundNegAlert  = input.float(-0.02,"Funding -threshold (-2% = -0.02)", step=0.0001)

// Warnings toggles
showExits     = input.bool(true,  "Show Exit signals")
showFunding   = input.bool(true,  "Warn Funding extremes")
showCMFflip   = input.bool(true,  "Warn CMF flip")
showMFIext    = input.bool(true,  "Warn MFI extremes")
showOBVflip   = input.bool(true,  "Warn OBV z flip")

// ========= Helpers: CMF/MFI/OBV (custom) =========
cmf_calc(_h, _l, _c, _v, _n) =>
    denom = math.max(_h - _l, 1e-10)
    mfm   = ((_c - _l) - (_h - _c)) / denom
    mfv   = mfm * _v
    sum_mfv = ta.sma(mfv, _n) * _n
    sum_vol = ta.sma(_v,  _n) * _n
    sum_vol != 0 ? (sum_mfv / sum_vol) : 0.0

mfi_calc(_h, _l, _c, _v, _n) =>
    tp   = (_h + _l + _c) / 3.0
    tp1  = nz(tp[1], tp)
    pos  = tp > tp1  ? (_v * tp) : 0.0
    neg  = tp < tp1  ? (_v * tp) : 0.0
    posN = ta.sma(pos, _n) * _n
    negN = ta.sma(neg, _n) * _n
    rs   = negN == 0 ? 100.0 : posN / negN
    100.0 - (100.0 / (1.0 + rs))

// OBV tích luỹ và z-score
var float obv = 0.0
obv += close > close[1] ?  volume :
       close < close[1] ? -volume : 0
obv_mean  = ta.sma(obv, zLenOBV)
obv_stdev = ta.stdev(obv, zLenOBV)
obv_z     = obv_stdev != 0 ? (obv - obv_mean) / obv_stdev : 0.0

// ========= Series + MTF =========
cmf_cur  = cmf_calc(high, low, close, volume, lenCMF)
cmf_fast = request.security(syminfo.tickerid, tfFast, cmf_calc(high, low, close, volume, lenCMF))
cmf_slow = request.security(syminfo.tickerid, tfSlow, cmf_calc(high, low, close, volume, lenCMF))
mfi_cur  = mfi_calc(high, low, close, volume, lenMFI)

ema_trend   = ta.ema(close, lenEMA)
in_uptrend  = close > ema_trend
in_downtrend= close < ema_trend

// ========= OI/Funding =========
oi_raw      = oiSymbol == ""      ? na : request.security(oiSymbol,      oiTf, close)
funding_raw = fundingSymbol == "" ? na : request.security(fundingSymbol, oiTf, close)
oi_mean  = na(oi_raw) ? na : ta.sma(oi_raw, 100)
oi_sd    = na(oi_raw) ? na : ta.stdev(oi_raw, 100)
oi_z     = na(oi_raw) or oi_sd == 0 ? na : (oi_raw - oi_mean) / oi_sd

// ========= Bias & Exit =========
longBias  = (cmf_cur > 0) and (cmf_fast > 0) and (cmf_slow > 0) and (mfi_cur > 50) and (obv_z > 0) and in_uptrend
shortBias = (cmf_cur < 0) and (cmf_fast < 0) and (cmf_slow < 0) and (mfi_cur < 50) and (obv_z < 0) and in_downtrend
exitLong  = (mfi_cur > 80) or (cmf_cur < 0) or (close < ema_trend)
exitShort = (mfi_cur < 20) or (cmf_cur > 0) or (close > ema_trend)

// ========= Lane system (fix chồng label) =========
atr  = ta.atr(14)
step = atr * 0.5  // tăng/giảm nếu vẫn chồng

drawAbove(txt, col, lane) =>
    label.new(bar_index, high + step * lane, txt, yloc=yloc.price, style=label.style_label_down, color=col, textcolor=color.black, size=size.small)

drawBelow(txt, col, lane) =>
    label.new(bar_index, low  - step * lane, txt, yloc=yloc.price, style=label.style_label_up, color=col, textcolor=color.black, size=size.small)

// ========= Render labels theo lane =========
fundHot   = not na(funding_raw) and funding_raw > fundPosAlert
fundCold  = not na(funding_raw) and funding_raw < fundNegAlert
cmfFlipDn = (cmf_cur < 0 and cmf_cur[1] >= 0)
cmfFlipUp = (cmf_cur > 0 and cmf_cur[1] <= 0)
obvFlipDn = (obv_z < 0 and obv_z[1] >= 0)
obvFlipUp = (obv_z > 0 and obv_z[1] <= 0)

if barstate.isconfirmed
    // Exit (lane 3)
    if showExits and exitLong
        drawAbove("Exit LONG", color.new(color.orange, 0), 3)
    if showExits and exitShort
        drawBelow("Exit SHORT", color.new(color.teal, 0),   3)

    // Funding extremes (lane 2)
    if showFunding and fundHot
        drawAbove("⚠ Funding HIGH (crowded LONGs)", color.new(color.fuchsia, 0), 2)
    if showFunding and fundCold
        drawBelow("⚠ Funding LOW (crowded SHORTs)", color.new(color.fuchsia, 0), 2)

    // CMF flip (lane 1)
    if showCMFflip and cmfFlipDn
        drawAbove("⚠ CMF flip ↓ (flow out)", color.new(color.yellow, 0), 1)
    if showCMFflip and cmfFlipUp
        drawBelow("⚠ CMF flip ↑ (flow in)",  color.new(color.yellow, 0), 1)

    // MFI extremes (lane 0)
    if showMFIext and mfi_cur > 80
        drawAbove("⚠ MFI > 80 (overbought)", color.new(color.red, 0), 0)
    if showMFIext and mfi_cur < 20
        drawBelow("⚠ MFI < 20 (oversold)",   color.new(color.teal,0), 0)

    // OBV z flip (lane 0) — nếu còn trùng, tăng lên 1 hoặc 2
    if showOBVflip and obvFlipDn
        drawAbove("⚠ OBV z flip ↓", color.new(color.orange, 0), 2)
    if showOBVflip and obvFlipUp
        drawBelow("⚠ OBV z flip ↑", color.new(color.orange, 0), 2)

// ========= Dashboard chữ đen (góc phải) =========
var table dash = table.new(position.top_right, 2, 8, border_width=1)
setCell(r, c, txt, col) =>
    table.cell(dash, c, r, txt, text_color=color.black, bgcolor=color.new(col, 0))

setCell(0,0,"CMF(cur)", color.white)
setCell(0,1, str.tostring(cmf_cur,  format.mintick), cmf_cur>0?color.lime:color.red)
setCell(1,0,"CMF(4H)",  color.white)
setCell(1,1, str.tostring(cmf_fast, format.mintick), cmf_fast>0?color.lime:color.red)
setCell(2,0,"CMF(1D)",  color.white)
setCell(2,1, str.tostring(cmf_slow, format.mintick), cmf_slow>0?color.lime:color.red)
setCell(3,0,"MFI",      color.white)
setCell(3,1, str.tostring(mfi_cur,  format.mintick), mfi_cur>=50?color.lime:color.red)
setCell(4,0,"OBV z",    color.white)
setCell(4,1, str.tostring(obv_z,    format.mintick), obv_z>=0?color.lime:color.red)
setCell(5,0,"Trend EMA",color.white)
setCell(5,1, in_uptrend?"UP":"DOWN", in_uptrend?color.lime:color.red)
setCell(6,0,"OI z",     color.white)
setCell(6,1, oiSymbol==""? "n/a" : str.tostring(oi_z, format.mintick), na(oi_z)?color.gray:(oi_z>=0?color.lime:color.red))
setCell(7,0,"Funding",  color.white)
setCell(7,1, fundingSymbol==""? "n/a" : str.tostring(funding_raw, format.mintick), na(funding_raw)?color.gray:(funding_raw>=0?color.lime:color.red))

// ========= Nền bias tổng hợp =========
bgcolor(longBias  ? color.new(color.lime, 85) : na)
bgcolor(shortBias ? color.new(color.red,  85) : na)
